name: Deploy Supabase Edge Functions

on:
  push:
    branches: [main]
    paths:
      - 'supabase/functions/**'
      - 'supabase/config.toml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Read project config (project_ref and site_url)
        id: cfg
        shell: bash
        run: |
          PROJECT_REF=$(grep -E '^project_id' supabase/config.toml | sed -E 's/.*"([^\"]+)".*/\1/')
          EXTERNAL_URL=$(grep -E '^site_url' supabase/config.toml | sed -E 's/.*"([^\"]+)".*/\1/')
          echo "PROJECT_REF=$PROJECT_REF" >> $GITHUB_ENV
          echo "SUPABASE_URL=$EXTERNAL_URL" >> $GITHUB_ENV
          echo "ref=$PROJECT_REF" >> $GITHUB_OUTPUT

      - name: Deploy functions (use API bundling so code appears in dashboard)
        run: supabase functions deploy --project-ref "$PROJECT_REF" --use-api
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Test deployment
        run: |
          echo "Testing edge function deployment..."
          # Functional check: POST without body should return 500 with 'deckId is required'
          STATUS_AND_BODY=$(curl -s -w "\n%{http_code}" -X POST -H "Content-Type: application/json" -d '{}' "$SUPABASE_URL/functions/v1/generate-cards")
          BODY=$(echo "$STATUS_AND_BODY" | head -n1)
          STATUS=$(echo "$STATUS_AND_BODY" | tail -n1)
          echo "Status: $STATUS"
          echo "Body: $BODY"
          echo "$BODY" | grep -q "deckId is required"